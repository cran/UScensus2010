substr(names(tr.tab),1,3)==sel.tract$county & substr(names(tr.tab),4,9)==sel.tract$tract
substr(names(tr.tab),1,3)==sel.tract$county
sel.tract$county%in%substr(names(tr.tab),1,3) & sel.tract$tract%in%substr(names(tr.tab),4,9)
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-#
data.frame(sapply(sel.tract@data[index,c("state","county","tract")],function(z){as.character(z)}),stringsAsFactors=FALSE)#
### Fix tract fips issue#
tr.samp$tract[nchar(tr.samp$tract)==4]<-paste(tr.samp$tract[nchar(tr.samp$tract)==4],"00",sep="")#
#
### Collapse fips code#
tr.samp<-paste(tr.samp$state,tr.samp$county,tr.samp$tract,sep="")#
#
##check results#
#table(nchar(tr.samp$tract))#
#
tr.tab<-table(tr.samp)
as.character(sel.tract$county)%in%substr(names(tr.tab),1,3) & as.character(sel.tract$tract)%in%substr(names(tr.tab),4,9)
as.character(sel.tract$county)%in%substr(names(tr.tab),1,3)
substr(names(tr.tab),1,3)
as.character(sel.tract$county)
substr(names(tr.tab),1,3)
unique(substr(names(tr.tab),1,3))
unique(as.character(sel.tract$county))
as.character(sel.tract$county)%in%substr(names(tr.tab),3,5)
nchar(names(tr.tab)[1])
as.character(sel.tract$county)%in%substr(names(tr.tab),3,5) & paste(as.character(sel.tract$tract),"00",sep="")%in%substr(names(tr.tab),6,11)
tr.tab<-table(tr.samp)#
temp<-data.frame(n=tr.tab,pop2000=sel.tract$pop2000[as.character(sel.tract$county)%in%substr(names(tr.tab),3,5) & paste(as.character(sel.tract$tract),"00",sep="")%in%substr(names(tr.tab),6,11)],stringsAsFactors=FALSE)#
names(temp)<-c("fips","freq","pop2000")
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-#
data.frame(sapply(sel.tract@data[index,c("state","county","tract")],function(z){as.character(z)}),stringsAsFactors=FALSE)#
### Fix tract fips issue#
tr.samp$tract[nchar(tr.samp$tract)==4]<-paste(tr.samp$tract[nchar(tr.samp$tract)==4],"00",sep="")#
#
### Collapse fips code#
tr.samp<-paste(tr.samp$state,tr.samp$county,tr.samp$tract,sep="")#
#
##check results#
#table(nchar(tr.samp$tract))#
#
tr.tab<-table(tr.samp)#
temp<-data.frame(n=tr.tab,pop2000=sel.tract$pop2000[as.character(sel.tract$county)%in%substr(names(tr.tab),3,5) & paste(as.character(sel.tract$tract),"00",sep="")%in%substr(names(tr.tab),6,11)],stringsAsFactors=FALSE)#
names(temp)<-c("fips","freq","pop2000")
tr.tab<-table(tr.samp)#
temp<-data.frame(n=tr.tab,pop2000=sel.tract$pop2000[as.character(sel.tract$county)%in%substr(names(tr.tab),3,5) & paste(as.character(sel.tract$tract),"00",sep="")%in%substr(names(tr.tab)],stringsAsFactors=FALSE)#
names(temp)<-c("fips","freq","pop2000")
sel.tract$pop2000[as.character(sel.tract$county)%in%substr(names(tr.tab),3,5) & paste(as.character(sel.tract$tract),"00",sep="")%in%substr(names(tr.tab)]
sel.tract$pop2000[as.character(sel.tract$county)%in%substr(names(tr.tab),3,5) & paste(as.character(sel.tract$tract),"00",sep="")%in%substr(names(tr.tab),6,11)]
length(tr.tab)
tr.tab<-table(tr.samp)#
temp<-data.frame(n=tr.tab,stringsAsFactors=FALSE)
dim(temp)
temp
sum(as.character(sel.tract$county)%in%substr(names(tr.tab),3,5) & paste(as.character(sel.tract$tract),"00",sep="")%in%substr(names(tr.tab),6,11))
sel.tract$pop2000[sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11)]
tr.tab<-table(tr.samp)#
temp<-data.frame(n=tr.tab,pop2000=pop2000=sel.tract$pop2000[sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11)],stringsAsFactors=FALSE)#
names(temp)<-c("fips","freq","pop2000")
tr.tab<-table(tr.samp)
pop2000=pop2000=sel.tract$pop2000[sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11)]
temp<-data.frame(n=tr.tab,pop2000=pop2000=sel.tract$pop2000[sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11)],stringsAsFactors=FALSE)
temp<-data.frame(n=tr.tab,pop2000=sel.tract$pop2000[sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11)],stringsAsFactors=FALSE)
length(tr.samp)
length(tr.tab)
sum(sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11))
sel.tract<-county(name=sel,state="california",level="tract",proj=CRS("+proj=cea"))#
#
## Fix factor issue#
sel.tract$state<-as.character(sel.tract$state)#
sel.tract$county<-as.character(sel.tract$county)#
sel.tract$tract<-as.character(sel.tract$tract)#
#
### Fix tract fips issue#
tr.tract$tract[nchar(tr.tract$tract)==4]<-paste(tr.tract$tract[nchar(tr.tract$tract)==4],"00",sep="")#
#
tr.areas<-sapply(sel.tract@polygons,function(z){z@area})#
#
#
#Now, draw the sample#
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-sel.tract@data[index,c("state","county","tract")]#
#
#
#
### Collapse fips code#
tr.samp<-paste(tr.samp$state,tr.samp$county,tr.samp$tract,sep="")#
#
##check results#
#table(nchar(tr.samp$tract))#
#
tr.tab<-table(tr.samp)
### Fix tract fips issue#
tr.tract$tract[nchar(tr.tract$tract)==4]<-paste(tr.tract$tract[nchar(tr.tract$tract)==4],"00",sep="")#
#
tr.areas<-sapply(sel.tract@polygons,function(z){z@area})#
#
#
#Now, draw the sample#
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-sel.tract@data[index,c("state","county","tract")]
tr.tract$tract[nchar(tr.tract$tract)==4]
## Fix factor issue#
sel.tract$state<-as.character(sel.tract$state)#
sel.tract$county<-as.character(sel.tract$county)#
sel.tract$tract<-as.character(sel.tract$tract)#
#
### Fix tract fips issue#
sel.tract$tract[nchar(sel.tract$tract)==4]<-paste(sel.tract$tract[nchar(sel.tract$tract)==4],"00",sep="")#
#
tr.areas<-sapply(sel.tract@polygons,function(z){z@area})#
#
#
#Now, draw the sample#
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-sel.tract@data[index,c("state","county","tract")]
sel.tract$tract[nchar(sel.tract$tract)==4]<-paste(sel.tract$tract[nchar(sel.tract$tract)==4],"00",sep="")
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-sel.tract@data[index,c("state","county","tract")]#
#
#
##check results#
#table(nchar(tr.samp$tract))#
#
tr.tab<-table(tr.samp)#
temp<-data.frame(n=tr.tab,pop2000=sel.tract$pop2000[sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11)],stringsAsFactors=FALSE)
sum(sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11)
)
sel.tract<-county(name=sel,state="california",level="tract",proj=CRS("+proj=cea"))#
#
## Fix factor issue#
sel.tract$state<-as.character(sel.tract$state)#
sel.tract$county<-as.character(sel.tract$county)#
sel.tract$tract<-as.character(sel.tract$tract)#
#
### Fix tract fips issue#
sel.tract$tract[nchar(sel.tract$tract)==4]<-paste(sel.tract$tract[nchar(sel.tract$tract)==4],"00",sep="")
head(sel.tract)
head(sel.tract@data)
head(sel.tract@data[,1:4])
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-sel.tract@data[index,c("state","county","tract")]#
tr.samp<-paste(sel.tract$state,sel.tract$county,sel.tract$tract,sep="")
sum(sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11))
tr.tab<-table(tr.samp)
sum(sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11))
sum(sel.tract$county%in%substr(names(tr.tab),3,5) && sel.tract$tract%in%substr(names(tr.tab),6,11))
sum(sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11))
sum(sel.tract$tract%in%substr(names(tr.tab),6,11))
sum(sel.tract$tract%in%unique(substr(names(tr.tab),6,11)))
substr(names(tr.tab),6,11)
length(unique(substr(names(tr.tab),6,11)))
length(unique(substr(names(tr.tab),3,5)))
tr.tab<-table(tr.samp)
temp<-data.frame(n=tr.tab,stringsAsFactors=FALSE)
dim(temp)
sel.tract<-county(name=sel,state="california",level="tract",proj=CRS("+proj=cea"))#
#
## Fix factor issue#
sel.tract$state<-as.character(sel.tract$state)#
sel.tract$county<-as.character(sel.tract$county)#
sel.tract$tract<-as.character(sel.tract$tract)#
#
### Fix tract fips issue#
sel.tract$tract[nchar(sel.tract$tract)==4]<-paste(sel.tract$tract[nchar(sel.tract$tract)==4],"00",sep="")#
#
tr.areas<-sapply(sel.tract@polygons,function(z){z@area})#
#
#
#Now, draw the sample#
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-sel.tract@data[index,c("state","county","tract")]#
tr.samp<-paste(sel.tract$state,sel.tract$county,sel.tract$tract,sep="")#
#
##check results#
#table(nchar(tr.samp$tract))#
#
tr.tab<-table(tr.samp)
dim(tr.tab)
tr.area
tr.areas
index
unique(index)
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-paste(sel.tract$state[index],sel.tract$county[index],sel.tract$tract[index],sep="")#
#
##check results#
#table(nchar(tr.samp$tract))#
#
tr.tab<-table(tr.samp)
dim(tr.tab)
sum(sel.tract$county%in%substr(names(tr.tab),3,5)&sel.tract$tract%in%substr(names(tr.tab),6,11))
sum(sel.tract$county%in%substr(names(tr.tab),3,5) & sel.tract$tract%in%substr(names(tr.tab),6,11))
tr.samp.pop<-sel.tract$pop2000[index]
match(tr.samp,names(tr.tab))
match(names(tr.tab),tr.samp)
n<-5000  #Sample size#
set.seed(1655)#
index<-sample(1:length(tr.areas),n,replace=TRUE, prob=tr.areas)#
tr.samp<-paste(sel.tract$state[index],sel.tract$county[index],sel.tract$tract[index],sep="")#
tr.samp.pop<-sel.tract$pop2000[index]#
##check results#
#table(nchar(tr.samp$tract))#
#
tr.tab<-table(tr.samp)#
temp<-data.frame(n=tr.tab,pop2000=tr.samp.pop[match(names(tr.tab),tr.samp)],stringsAsFactors=FALSE)#
names(temp)<-c("fips","freq","pop2000")
head(temp)
head
temp
sc.tract<-sel.tract[index,]
plot(sc.tract)
sc.tract<-sel.tract[unique(index),]
plot(sc.tract)
plot(sel.tract,col="gray")
plot(sel.tract,col="gray",border=rgb(1,1,1,.5))
sc.tract<-sel.tract[unique(index),]#
#
#
#
plot(sel.tract,col="gray",border=rgb(1,1,1,.5))#
plot(sc.tract,col="red",border=rgb(1,1,1,.5),add=TRUE)
help(par)
par(mar=c(0, 0, 0, 0) + 0.1)#
plot(sel.tract,col="gray",border=rgb(1,1,1,.5))#
plot(sc.tract,col="red",border=rgb(1,1,1,.5),add=TRUE)
library(networkSpatial)
help(rnspatial)
library(diffusion)
cite(diffusion)
citation("diffusion")
help(package=diffusion)
help(diffusion)
library(rgdal)
citation(rgdal)
citation("rgdal")
help(for)
help("for")
help(as.vector)
help(sessionInfo)
sessionInfo()
library(sna)
help(concensus)
help(package="sna")
help(consensus)
library(sna)
help(concensus)
help(consensus)
library(foriegn)
library(foreign)
test<-read.dbf("/Users/zack/Downloads/STF3A_04.dbf",as.is=TRUE)
head(test[,1:10])
head(test[,1:15])
t2<-read.dbf("/Users/zack/Downloads/tables.dbf",as.is=TRUE)
head(t2)
sum(names(test)%in%t2$FIELD)
dim(test)
t2
t3<-read.dbf("/Users/zack/Downloads/tables (1).dbf",as.is=TRUE)
sum(names(test)%in%t3$FIELD)
names(test)
t3
t3[t3$FIELD%in%names(test),]
help(gsub)
help(assign)
load("/Users/zack/Desktop/A____US_CENSUS2010/UScensus1990blkgrp/arizona.blkgrp90.rda")
ls()
names(arizona.blkgrp90)
head(arizona.blkgrp90@data)
plot(arizona.blkgrp90)
library(UScensus1990blkgrp)
help(oregon.blkgrp90)
plot(oregon.blkgrp90)
data(oregon.blkgrp90)
help(oregon.blkgrp90)
plot(oregon.blkgrp90)
help(oregon.blkgrp90)
spplot(oregon.blkgrp90,"P0050001")
spplot(oregon.blkgrp90,"P019X1P")
oregon.blkgrp90$P019X1P
class(oregon.blkgrp90$P019X1P)
class(oregon.blkgrp90$fips)
library(UScensus2000)
help(UScensus2000)
help(package="UScensus2000")
help(choropleth )
oregon.blkgrp90$P0050001
choropleth(oregon.blkgrp90,"P0050001")
help(UScensus1990)
help(UScensus1990blkgrp)
library(UScensus1990blkgrp)
help(UScensus1990blkgrp)
library(UScensus1990blkgrp)
help(UScensus1990blkgrp)
library(UScensus1990blkgrp)
help(UScensus1990blkgrp)
help(read.csv)
location<-"/Users/zack/Downloads/2000 contracting totals"#
fileNames<-dir(location)#
for(i in 1:length(fileNames))#
	files[[i]]<-read.csv(fileName[[i]],header=TRUE, stringsAsFactors =FALSE)
for(i in 1:length(fileNames))#
	files[[i]]<-read.cs
for(i in 1:length(fileNames))#
	files[[i]]<-read.csv(fileNames[[i]],header=TRUE, stringsAsFactors =FALSE)
fileNames
rm(list=ls())
location<-"/Users/zack/Downloads/2000 contracting totals/"#
fileNames<-dir(location)#
files<-vector("list",length(fileNames))
files
fileNames
for(i in 1:length(fileNames))#
	files[[i]]<-read.csv(paste(locationfile,Names[[i]]sep=""),header=TRUE, stringsAsFactors =FALSE)
location<-"/Users/zack/Downloads/2000 contracting totals/"#
fileNames<-dir(location)#
files<-vector("list",length(fileNames))
for(i in 1:length(fileNames))#
	files[[i]]<-read.csv(paste(locationfile,Names[[i]]sep=""),header=TRUE, stringsAsFactors =FALSE)
paste(locationfile,Names[i]sep="")
paste(locationfile,Names[i],sep="")
paste(location,Names[i]sep="")
paste(location,Names[i],sep="")
paste(location,fileNames[i]sep="")
paste(location,fileNames[i],sep="")
i<-1
files[[i]]<-read.csv(paste(location,fileNames[i],sep=""),header=TRUE, stringsAsFactors =FALSE)
files[[1]]
names(files)
names(files[[1]])
dir("")
dir()
library(rgdal)
path<-"/Users/zack/Downloads/tl_2010_us_state10/tl_2010_us_state10.shp"#
path2<-"tl_2010_us_state10"#
#
### Read into R#
states<-readOGR(path,path2)
plot(states)
head(states@data)
continentalUS<-state[!as.character(states$NAME10)%in%c("Hawaii","Alaska"),]
continentalUS<-states[!as.character(states$NAME10)%in%c("Hawaii","Alaska"),]
plot(continentalUS)
continentalUS$NAME10
as.character(continentalUS$NAME10)
length(as.character(continentalUS$NAME10))
continentalUS<-state[!as.character(states$NAME10)%in%c("Hawaii","Alaska","Puerto Rico"),]
continentalUS<-states[!as.character(states$NAME10)%in%c("Hawaii","Alaska","Puerto Rico"),]
plot(continentalUS)
states<-states[!as.character(states$NAME10)%in%c("Puerto Rico"),]
help(data.frame)
states@data<-data.frame(names=as.character(states$NAME10),acronym=as.character(states$STUSPS10),fips=as.character(states$GEOID10),stringsAsFactors =FALSE)#
#
continentalUS@data<-data.frame(names=as.character(continentalUS$NAME10),acronym=as.character(continentalUS$STUSPS10),fips=as.character(continentalUS$GEOID10),stringsAsFactors =FALSE)
plot(states)
names(states)
names(continentalUS)
head(continentalUS@data)
class(continentalUS$names)
pop<-read.csv("/Users/zack/Downloads/pop_change.csv",header=TRUE,stringsAsFactors =FALSE)
head(pop)
pop<-read.csv("/Users/zack/Downloads/pop_change.csv",header=TRUE,stringsAsFactors =FALSE)
head(pop)
pop$STATE_OR_REGION
m<-match(states$names,pop$STATE_OR_REGION)
m
pop$STATE_OR_REGION[m]
states$names
head(pop)
help(gsub)
grep("POPULATION",names(pop))
toAdd<-pop[m,grep("POPULATION",names(pop))]
head(toAdd)
toAdd<-pop[m,c(1,grep("POPULATION",names(pop)))]
head(toAdd)
length(states$names)
help(rep)
length(seq(from=1910,to=2010,by=10))
names(toAdd)<-c(names,paste(rep("pop",11),seq(from=1910,to=2010,by=10),sep=""))
head(toAdd)
names(toAdd)<-c("names",paste(rep("pop",11),seq(from=1910,to=2010,by=10),sep=""))
head(toAdd)
states@data<-data.frame(states@data,toAdd,stringsAsFactors =FALSE)
head(states@data)
m<-match(continentalUS$names,pop$STATE_OR_REGION)#
#
toAdd<-pop[m,c(1,grep("POPULATION",names(pop)))]#
names(toAdd)<-c("names",paste(rep("pop",11),seq(from=1910,to=2010,by=10),sep=""))#
#
continentalUS@data<-data.frame(continentalUS@data,toAdd,stringsAsFactors =FALSE)
dir()
setwd("/Users/zack/Desktop/A____US_CENSUS2010/UScensus2010/data")
help(save)
save(states,file="states.rda",compress="xz")
rm(list=ls())
path<-"/Users/zack/Downloads/tl_2010_us_state10/tl_2010_us_state10.shp"#
path2<-"tl_2010_us_state10"#
#
### Read into R#
states<-readOGR(path,path2)#
#
continentalUS<-states[!as.character(states$NAME10)%in%c("Hawaii","Alaska","Puerto Rico"),]#
states<-states[!as.character(states$NAME10)%in%c("Puerto Rico"),]#
#
states@data<-data.frame(names=as.character(states$NAME10),acronym=as.character(states$STUSPS10),fips=as.character(states$GEOID10),stringsAsFactors =FALSE)#
#
continentalUS@data<-data.frame(names=as.character(continentalUS$NAME10),acronym=as.character(continentalUS$STUSPS10),fips=as.character(continentalUS$GEOID10),stringsAsFactors =FALSE)#
#
pop<-read.csv("/Users/zack/Downloads/pop_change.csv",header=TRUE,stringsAsFactors =FALSE)#
#
m<-match(states$names,pop$STATE_OR_REGION)#
#
toAdd<-pop[m,c(grep("POPULATION",names(pop)))]#
names(toAdd)<-c(paste(rep("pop",11),seq(from=1910,to=2010,by=10),sep=""))#
#
states@data<-data.frame(states@data,toAdd,stringsAsFactors =FALSE)#
#
#
m<-match(continentalUS$names,pop$STATE_OR_REGION)#
#
toAdd<-pop[m,c(grep("POPULATION",names(pop)))]#
names(toAdd)<-c(paste(rep("pop",11),seq(from=1910,to=2010,by=10),sep=""))#
#
continentalUS@data<-data.frame(continentalUS@data,toAdd,stringsAsFactors =FALSE)#
#
save(states,file="states.rda",compress="xz")#
save(continentalUS,file="continentalUS.rda",compress="xz")
head(continentalUS@data)
class(continentalUS@data$pop1910)
names(continentalUS)
class(conitentalUS)
class(continentalUS)
library(UScensus2000)
choropleth(conitentalUS,"pop2010",color = list(fun = "rainbow", attr = list(4)),main="2010 US Census",type="plot",border="transparent")
ls()
class(continentalUS)
choropleth(continentalUS,"pop2010",color = list(fun = "rainbow", attr = list(4)),main="2010 US Census",type="plot",border="transparent")
areaPoly(continentalUS)
continentalUS$den<-continentalUS$pop2010/areaPoly(continentalUS)
choropleth(continentalUS,"den",color = list(fun = "rainbow", attr = list(4)),main="2010 US Census",type="plot",border="transparent")
check.state("or")
check.state("or",statefips=FALSE)
t<-check.state("or",statefips=FALSE)
t
